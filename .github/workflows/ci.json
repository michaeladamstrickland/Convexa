{
  "name": "CI/CD Pipeline with Hygiene Gates",
  "on": {
    "push": {
      "branches": [
        "main",
        "develop"
      ],
      "paths-ignore": [
        "docs/**",
        "README.md"
      ]
    },
    "pull_request": {
      "branches": [
        "main",
        "develop"
      ],
      "types": [
        "opened",
        "synchronize",
        "reopened"
      ]
    }
  },
  "jobs": {
    "hygiene-audit": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout code",
          "uses": "actions/checkout@v4"
        },
        {
          "name": "Setup Node.js",
          "uses": "actions/setup-node@v4",
          "with": {
            "node-version": "20"
          }
        },
        {
          "name": "Install dependencies",
          "run": "npm ci"
        },
        {
          "name": "Run Route Inventory Audit",
          "run": "node scripts/audit/routesInventory.mjs"
        },
        {
          "name": "Verify Route Inventory Changes",
          "run": "node scripts/ci/verifyRouteInventory.cjs"
        },
        {
          "name": "Run Dead Code Detection",
          "run": "npx knip --config knip.json --reporter json > ops/findings/dep_unused_ci.json || true"
        },
        {
          "name": "Run Duplicate File Detection",
          "run": "node scripts/audit/dupeFinder.mjs"
        },
        {
          "name": "Run Environment Audit",
          "run": "node scripts/audit/envUsage.cjs"
        },
        {
          "name": "Run Database Schema Audit",
          "run": "node scripts/audit/schemaDump.cjs"
        },
        {
          "name": "Run Metrics and Logging Audit",
          "run": "node scripts/audit/metricsLogging.cjs"
        },
        {
          "name": "Verify Hygiene Gates",
          "run": "node scripts/ci/verifyHygieneGates.cjs"
        },
        {
          "name": "Upload Audit Reports",
          "uses": "actions/upload-artifact@v4",
          "with": {
            "name": "hygiene-audit-reports-${{ github.sha }}",
            "retention-days": 30,
            "path": "ops/findings/"
          }
        }
      ]
    },
    "build-and-test": {
      "runs-on": "ubuntu-latest",
      "needs": [
        "hygiene-audit"
      ],
      "steps": [
        {
          "name": "Checkout code",
          "uses": "actions/checkout@v4"
        },
        {
          "name": "Clean pre-existing node_modules",
          "run": "rm -rf node_modules backend/node_modules frontend/node_modules"
        },
        {
          "name": "Setup Node.js",
          "uses": "actions/setup-node@v4",
          "with": {
            "node-version": "20"
          }
        },
        {
          "name": "Install dependencies (clean)",
          "run": "npm ci"
        },
        {
          "name": "ESLint Check (Import Cycles)",
          "run": "npx eslint src/ backend/ --ext .js,.ts,.jsx,.tsx --max-warnings 0"
        },
        {
          "name": "Run tests (Vitest with coverage)",
          "run": "npm run coverage"
        },
        {
          "name": "Typecheck (server-only)",
          "run": "npm run typecheck"
        },
        {
          "name": "Upload artifacts (e.g., build output, test reports)",
          "uses": "actions/upload-artifact@v4",
          "with": {
            "name": "build-artifacts-${{ github.sha }}",
            "if-no-files-found": "ignore",
            "retention-days": 30,
            "path": "dist/\ncoverage/\ntest-results.xml\nqa/smoke_output/"
          }
        }
      ]
    }
  }
}