name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean pre-existing node_modules
        run: rm -rf node_modules backend/node_modules frontend/node_modules

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (clean)
        run: npm ci

      - name: Setup database for testing
        env:
          SQLITE_DB_PATH: ${{ github.workspace }}/backend/data/convexa.db
        run: |
          mkdir -p backend/data
          npm run db:setup

      - name: Run PI1 smoke tests with server
        env:
          SQLITE_DB_PATH: ${{ github.workspace }}/backend/data/convexa.db
        run: npm run smoke:pi1:all

      - name: Check for required metrics in smoke output
        run: |
          grep -q "campaign_queries_total" ops/findings/pi1_metrics_sample.txt || { echo "campaign_queries_total not found in metrics sample!"; exit 1; }
          grep -q "lead_grades_total" ops/findings/pi1_metrics_sample.txt || { echo "lead_grades_total not found in metrics sample!"; exit 1; }
          grep -q "dialer_disposition_total" ops/findings/pi1_metrics_sample.txt || { echo "dialer_disposition_total not found in metrics sample!"; exit 1; }
          grep -q "followups_created_total" ops/findings/pi1_metrics_sample.txt || { echo "followups_created_total not found in metrics sample!"; exit 1; }
          grep -q "followups_completed_total" ops/findings/pi1_metrics_sample.txt || { echo "followups_completed_total not found in metrics sample!"; exit 1; }
          grep -q "followups_due_gauge" ops/findings/pi1_metrics_sample.txt || { echo "followups_due_gauge not found in metrics sample!"; exit 1; }

      - name: Run tests (Vitest with coverage)
        run: npm run coverage

      - name: Typecheck (server-only)
        run: npm run typecheck

      - name: Upload artifacts (e.g., build output, test reports)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          if-no-files-found: ignore
          retention-days: 30
          path: |
            dist/ # Adjust to your build output directory
            coverage/ # Adjust to your test coverage report directory
            test-results.xml # Adjust to your test results file
            qa/smoke_output/ # Path to smoke test outputs (JSON/logs/PNG)
            ops/dashboards/convexa_pi1.json
            ops/findings/campaigns_smoke.md
            ops/findings/grades_recompute.md
            ops/findings/dial_followup_timeline.md
            ops/findings/pi1_metrics_sample.txt
